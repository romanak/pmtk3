%% Demonstrate the effect of changing the hyper-parameters for an MLP
% based on demprior from netlab, but without the GUI code
%%

% This file is from pmtk3.googlecode.com

setSeed(1);

%{
% values from Bishop p260 - clearly not correct
aw1s = [1 1 1000 1000];
ab1s = [1 1 100 1000];
aw2s = [1 10 1 1];
ab2s = [1 1 1 1];
%}

sig


W1big = []; B1big = []; W2big = []; B2big = [];
ntrials = 4;
for t=1:ntrials
  aw1 = 1/aw1s(t); ab1 = 1/ab1s(t); aw2 = 1/aw2s(t); ab2 = 1/ab2s(t);
 
  nhidden = 12;
  prior = mlpprior(1, nhidden, 1, aw1, ab1, aw2, ab2);
  xvals = -1:0.005:1;
  nsample = 10;    % Number of samples from prior.
  figure
  hold on
  axis([-1 1 -10 10]);  
  
  net = mlp(1, nhidden, 1, 'linear', prior);
  for i = 1:nsample
    net = mlpinit(net, prior);
    yvals = mlpfwd(net, xvals');
    plot(xvals', yvals, 'k', 'linewidth', 2);
    
    W1(i,:) = net.w1;
    B1(i,:) = net.b1;
    W2(i,:) = net.w2';
    B2(i) = net.b2;
    %M(i,:) = [net.w1 0 net.b1 0 net.w2' 0 net.b2];
  end
  pad = zeros(5, 12);
  pad1 = zeros(1,5);
  W1big = [W1big; pad; W1];
  B1big = [B1big; pad; B1];
  W2big = [W2big; pad; W2];
  B2big = [B2big pad1 B2];
  W1mean(t) = mean(W1(:));
  B1mean(t) = mean(B1(:));
  W2mean(t) = mean(W2(:));
  B2mean(t) = mean(B2(:));
  
  ttl{t} = sprintf('aw1=%5.3f, ab1=%5.3f, aw2=%5.3f, ab2=%5.3f', ...
    aw1, ab1, aw2, ab2);
  ttl{t} = sprintf('%s=%5.3f, %s=%5.3f, %s=%5.3f, %s=%5.3f', ...
    '\sigma_1', 1/sqrt(aw1), '\tau_1', 1/sqrt(ab1), ...
    '\sigma_2', 1/sqrt(aw2), '\tau_2', 1/sqrt(ab2));
  title(ttl{t})
  printPmtkFigure(sprintf('mlpPriorsDemov2-%d', t))
end

